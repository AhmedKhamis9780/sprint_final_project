pipeline { 
    agent any
    stages {
        stage('docker login and push image') {
            steps {
                withAWS(credentials: 'aws_cren', region: 'us-east-1') {
                    sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 699819973233.dkr.ecr.us-east-1.amazonaws.com/sprint'
                    sh 'docker build -t 699819973233.dkr.ecr.us-east-1.amazonaws.com/sprint:1 MySQL-and-Python/'
                    sh 'docker push 699819973233.dkr.ecr.us-east-1.amazonaws.com/sprint:1'
                }
            }
        }
        stage('iginx conteoller') {
            steps {
                withAWS(credentials: 'aws_cren', region: 'us-east-1') {
                    sh 'aws eks update-kubeconfig --region us-east-1 --name sprint'
                    sh 'helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx'
                    sh 'helm upgrade -i ingress-nginx ingress-nginx/ingress-nginx --version 4.2.3 --namespace kube-system --set controller.service.type=LoadBalancer'
                    sh 'kubectl -n kube-system rollout status deployment ingress-nginx-controller'
                }
             }
        }
        stage('deploy') {
            steps {
                withAWS(credentials: 'aws_cren', region: 'us-east-1') {
                    sh 'kubectl apply -f k8s/.'  
                }
            }
        }
}
}